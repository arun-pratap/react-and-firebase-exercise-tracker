{"version":3,"sources":["components/navBar.js","components/exercisesList.js","components/editExercise.js","components/createExercise.js","components/createUser.js","components/instructions.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","ExercisesList","onDeleteExercise","key","axios","delete","then","res","console","log","alert","setState","exercises","state","filter","data","id","bind","get","catch","err","error","this","map","exercise","username","description","duration","date","onClick","EditExercise","props","onChange","e","target","name","value","onChangeDate","onSubmit","preventDefault","post","match","params","Date","users","response","length","user","ref","required","type","selected","showTimeSelect","dateFormat","CreateExercise","newExercise","CreateUser","newUser","errors","instructions","App","path","exact","component","Boolean","window","location","hostname","Axios","defaults","baseURL","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.384f6c32.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                <Link to=\"/\" className=\"navbar-brand\">Excercise-Tracker</Link>\r\n                <div className=\"collpase navbar-collapse\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/user\" className=\"nav-link\">Create User</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/create\" className=\"nav-link\">Create Exercise Log</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">Exercise Lists</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class ExercisesList extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            exercises: [],\r\n        }\r\n\r\n        this.onDeleteExercise = this.onDeleteExercise.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/exercises')\r\n            .then((res) => {\r\n                this.setState({\r\n                    exercises: res.data\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.error(err)\r\n            })\r\n    }\r\n\r\n    onDeleteExercise = (key) => {\r\n        axios.delete(`/exercises/` + key)\r\n            .then((res) => {\r\n                console.log(`deleted ${key}`)\r\n            })\r\n            .then(() => {\r\n                alert('successfully deleted')\r\n            })\r\n        this.setState({\r\n            exercises: this.state.exercises.filter((data) => data.id !== key)\r\n        })\r\n    }\r\n    render() {\r\n        const { exercises } = this.state\r\n        return (\r\n            <div>\r\n                <h3>Logged Exercises</h3>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th>Username</th>\r\n                            <th>Description</th>\r\n                            <th>Duration</th>\r\n                            <th>Date</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            exercises.map((exercise) => {\r\n                                let id = exercise.id\r\n                                return (<tr key={id}>\r\n                                    <td>{exercise.username}</td>\r\n                                    <td>{exercise.description}</td>\r\n                                    <td>{exercise.duration}</td>\r\n                                    <td>{exercise.date}</td>\r\n                                    <td>\r\n                                        <Link to={`/exercises/${id}`}>edit</Link> | <Link to=\"#\" onClick={() => this.onDeleteExercise(id)} >delete</Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class EditExercise extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            description: '',\r\n            duration: 0,\r\n            date: new Date(),\r\n            users: []\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match: { params } } = this.props\r\n        axios.get(`/exercises/${params.id}`)\r\n            .then(response => {\r\n                this.setState({\r\n                    username: response.data.username,\r\n                    description: response.data.description,\r\n                    duration: response.data.duration,\r\n                    date: new Date(response.data.date)\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n\r\n        axios.get('/users')\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    this.setState({\r\n                        users: response.data.map(user => user.username),\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onChangeDate = (date) => {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const exercise = {\r\n            username: this.state.username,\r\n            description: this.state.description,\r\n            duration: this.state.duration,\r\n            date: this.state.date\r\n        }\r\n        console.log(exercise)\r\n        axios.post(`/exercises/${this.props.match.params.id}`, exercise)\r\n            .then((res) => {\r\n                console.log(\"updated\")\r\n            })\r\n            .then(() => {\r\n                alert('successfully updated')\r\n            })\r\n        // window.location = '/';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Edit Exercise Log</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username: </label>\r\n                        <select ref=\"userInput\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.onChange}>\r\n                            {\r\n                                this.state.users.map((user) => {\r\n                                    return <option key={user}\r\n                                        value={user}>\r\n                                        {user}\r\n                                    </option>;\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Duration (in minutes): </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"duration\"\r\n                            value={this.state.duration}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Date: </label>\r\n                        <div>\r\n                            <DatePicker\r\n                                selected={this.state.date}\r\n                                onChange={this.onChange}\r\n                                showTimeSelect\r\n                                dateFormat=\"Pp\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Update Exercise Log\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class CreateExercise extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            description: '',\r\n            duration: 0,\r\n            date: new Date(),\r\n            users: []\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onChangeDate = this.onChangeDate.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    onChangeDate = (date) => {\r\n        this.setState({\r\n            date: date\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newExercise = {\r\n            username: this.state.username,\r\n            description: this.state.description,\r\n            duration: this.state.duration,\r\n            date: this.state.date\r\n        }\r\n        console.log(newExercise)\r\n        axios.post('/exercises', newExercise)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                return res.data\r\n            })\r\n            .then(() => {\r\n                alert('Log created')\r\n            })\r\n            .catch((err) => {\r\n                console.error(err)\r\n            })\r\n\r\n        // window.location = '/';\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('/users')\r\n            .then(res => {\r\n                if (res.data.length > 0) {\r\n                    this.setState({\r\n                        users: res.data.map((user) => user.username),\r\n                        username: res.data[0].username\r\n                    })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Create New Exercise Log</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username: </label>\r\n                        <select ref=\"userInput\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.onChange}>\r\n                            {\r\n                                this.state.users.map((user) => {\r\n                                    return <option\r\n                                        key={user}\r\n                                        value={user}>\r\n                                        {user}\r\n                                    </option>;\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Duration (in minutes): </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"duration\"\r\n                            value={this.state.duration}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Date: </label>\r\n                        <div>\r\n                            <DatePicker\r\n                                selected={this.state.date}\r\n                                onChange={this.onChangeDate}\r\n                                showTimeSelect\r\n                                dateFormat=\"Pp\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Exercise Log\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            errors: ''\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            username: this.state.username\r\n        }\r\n        axios\r\n            .post('/users', newUser)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n            })\r\n            .then(() => {\r\n                alert('User Created')\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Create New User</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            onChange={this.onChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport class instructions extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    Note: don't <b>reload, go back</b> and <b>go forward</b>.Otherwise it will show errors.\r\n                    Just follow the procedure given below.\r\n                    </p>\r\n                <h5>Procedure to log the user and exercise:</h5>\r\n                <ul>\r\n                    <li><b>Create User</b></li>\r\n                    <li><b>Create Exercise Log</b></li>\r\n                    <li><b>Now see updates in table</b></li>\r\n                </ul>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default instructions;","import React from 'react';\nimport './App.css';\n\n//\nimport { Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//\nimport Navbar from \"./components/navBar\"\nimport ExercisesList from \"./components/exercisesList\";\nimport EditExercise from \"./components/editExercise\";\nimport CreateExercise from \"./components/createExercise\";\nimport CreateUser from \"./components/createUser\";\nimport Instructions from './components/instructions';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Navbar />\n      <Instructions />\n      <br />\n      <Route path=\"/\" exact component={ExercisesList} />\n      <Route path=\"/create\" component={CreateExercise} />\n      <Route path=\"/exercises/:id\" component={EditExercise} />\n      <Route path=\"/user\" component={CreateUser} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://us-central1-contacts-367b9.cloudfunctions.net/api';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}